{"version":3,"file":"favorites.js","sources":["../src/js/services/api/quotes-api.js","../src/js/utils/getTodayDate.js","../src/js/services/quotes.js","../src/js/sharedComponents/quoteOfTheDay.js","../src/js/sharedComponents/exercisesCards.js","../src/js/services/favorites.js"],"sourcesContent":["import axios from '../../config/axios';\n\nexport const getQuoteOfTheDay = async () => {\n  const { data } = await axios.get('/quote');\n  return data;\n};\n","export const getTodayDate = () => {\n  return new Date().toISOString().split('T')[0];\n};\n","import * as api from './api/quotes-api';\nimport * as errorMessages from '../constants/error-messages';\nimport { getTodayDate } from '../utils/getTodayDate';\n\nexport const handleGetQuoteOfTheDay = async () => {\n  try {\n    const quote = await api.getQuoteOfTheDay();\n    const today = getTodayDate();\n\n    const quoteWithDate = {\n      ...quote,\n      date: today,\n    };\n\n    localStorage.setItem('quoteOfTheDay', JSON.stringify(quoteWithDate));\n\n    return quoteWithDate;\n  } catch (error) {\n    const { status } = error;\n    const message =\n      errorMessages.getExercisesByFiltersErrs[status] ||\n      `Unexpected error (${error.message || 'unknown'})`;\n\n    throw {\n      code: status,\n      message: message,\n    };\n  }\n};\n","import { handleGetQuoteOfTheDay } from '../services/quotes.js';\nimport { getTodayDate } from '../utils/getTodayDate.js';\n\nexport async function renderQuoteOfTheDay(quoteText, quoteAuthor) {\n  try {\n    const ls_data = JSON.parse(localStorage.getItem('quoteOfTheDay'));\n\n    const todayDate = getTodayDate();\n    const qouteDate = ls_data.date;\n\n    let authorName;\n    let authorQuote;\n\n    if (todayDate === qouteDate) {\n      authorName = ls_data.author;\n      authorQuote = ls_data.quote;\n    } else {\n      const requestData = await handleGetQuoteOfTheDay();\n      authorName = requestData.author;\n      authorQuote = requestData.quote;\n    }\n\n    quoteText.textContent = authorQuote;\n    quoteAuthor.textContent = authorName;\n  } catch (error) {\n    console.log('ðŸš€ ~ error in getQuoteOfTheDay data rendering:', error);\n  }\n}\n","export function preparingCardsMarkup(listElement, items, BtnVisible = true) {\n  if (!items || items.length === 0) {\n    listElement.innerHTML = '';\n    return;\n  }\n\n  const FavoritesMarkup = items\n    .map(\n      item => `\n    <li class=\"workout-list-item\">\n      <div class=\"workout-card\">\n        <div class=\"workout-header\">\n          <span class=\"workout-badge\">WORKOUT</span>\n          ${\n            BtnVisible\n              ? `\n            <button class=\"delete-button\" aria-label=\"Delete workout\">\n              <img src=\"../img/trash-icon.svg\" alt=\"Delete\" width=\"16\" height=\"16\">\n            </button>\n          `\n              : ''\n          }\n          <button class=\"start-button\">Start âž”</button>\n        </div>\n        <div class=\"workout-body\">\n          <span class=\"workout-icon-running\">\n            <img\n              src=\"../img/quote_icon_1.svg\"\n              width=\"24px\"\n              height=\"24px\"\n              alt=\"Running Icon\"\n            />\n          </span>        \n          <h3 class=\"workout-name\">${item.name}</h3>\n          <p class=\"workout-stats\">\n            Burned calories: ${item.burnedCalories} / ${item.time} min\n            <br>\n            Body part: ${item.bodyPart} <br>  Target: ${item.target}\n          </p>\n        </div>\n      </div>\n    </li>\n    `\n    )\n    .join('');\n\n  listElement.innerHTML = FavoritesMarkup;\n}\n","import { modalRefs } from '../constants/refs.js';\nimport { renderQuoteOfTheDay } from '../sharedComponents/quoteOfTheDay.js';\nimport { preparingCardsMarkup } from '../sharedComponents/exercisesCards.js';\n\nconst quoteText = document.querySelector('.quote-day-card-text');\nconst quoteAuthor = document.querySelector('.quote-day-card-author');\nconst workuotList = document.querySelector('.workout-list');\n\nexport function setFavoriteButtonToAdd() {\n  modalRefs.favoriteButton.innerHTML = `\n    Add to favorites\n    <svg>\n      <use href=\"./img/sprite.svg#heart\"></use>\n    </svg>`;\n}\n\nexport function setFavoriteButtonToRemove() {\n  modalRefs.favoriteButton.innerHTML = `\n    Remove from favorites\n    <svg>\n      <use href=\"./img/sprite.svg#trash\"></use>\n    </svg>`;\n}\n\nexport function handleFavoriteClick(favorites, exercise) {\n  const exerciseIndex = favorites.findIndex(fav => fav.id === exercise.id);\n\n  if (exerciseIndex === -1) {\n    // Add to favorites\n    favorites.push(exercise);\n    setFavoriteButtonToRemove();\n  } else {\n    // Remove from favorites\n    favorites.splice(exerciseIndex, 1);\n    setFavoriteButtonToAdd();\n  }\n\n  localStorage.setItem('favorites', JSON.stringify(favorites));\n}\n\nasync function renderFavoritesItems() {\n  try {\n    const favoritesListJson = localStorage.getItem('favorites');\n    const favoritesList = JSON.parse(favoritesListJson);\n    if (favoritesList && favoritesList.length > 0) {\n      preparingCardsMarkup(workuotList, favoritesList);\n    } else {\n      const error = document.querySelector('.not-items-message');\n      error.style.display = 'block';\n    }\n  } catch (error) {\n    console.log('ðŸš€ ~ error in getFavoritesItems data rendering:', error);\n  }\n}\n\nrenderQuoteOfTheDay(quoteText, quoteAuthor);\nrenderFavoritesItems();\n"],"names":["getQuoteOfTheDay","data","axios","getTodayDate","handleGetQuoteOfTheDay","quote","api.getQuoteOfTheDay","today","quoteWithDate","error","status","message","errorMessages.getExercisesByFiltersErrs","renderQuoteOfTheDay","quoteText","quoteAuthor","ls_data","todayDate","qouteDate","authorName","authorQuote","requestData","preparingCardsMarkup","listElement","items","BtnVisible","FavoritesMarkup","item","workuotList","renderFavoritesItems","favoritesListJson","favoritesList"],"mappings":"8FAEO,MAAMA,EAAmB,SAAY,CAC1C,KAAM,CAAE,KAAAC,CAAI,EAAK,MAAMC,EAAM,IAAI,QAAQ,EACzC,OAAOD,CACT,ECLaE,EAAe,IACnB,IAAI,KAAI,EAAG,YAAW,EAAG,MAAM,GAAG,EAAE,CAAC,ECGjCC,EAAyB,SAAY,CAChD,GAAI,CACF,MAAMC,EAAQ,MAAMC,IACdC,EAAQJ,IAERK,EAAgB,CACpB,GAAGH,EACH,KAAME,CACZ,EAEI,oBAAa,QAAQ,gBAAiB,KAAK,UAAUC,CAAa,CAAC,EAE5DA,CACR,OAAQC,EAAO,CACd,KAAM,CAAE,OAAAC,CAAQ,EAAGD,EACbE,EACJC,EAAwCF,CAAM,GAC9C,qBAAqBD,EAAM,SAAW,SAAS,IAEjD,KAAM,CACJ,KAAMC,EACN,QAASC,CACf,CACG,CACH,ECzBO,eAAeE,EAAoBC,EAAWC,EAAa,CAChE,GAAI,CACF,MAAMC,EAAU,KAAK,MAAM,aAAa,QAAQ,eAAe,CAAC,EAE1DC,EAAYd,IACZe,EAAYF,EAAQ,KAE1B,IAAIG,EACAC,EAEJ,GAAIH,IAAcC,EAChBC,EAAaH,EAAQ,OACrBI,EAAcJ,EAAQ,UACjB,CACL,MAAMK,EAAc,MAAMjB,IAC1Be,EAAaE,EAAY,OACzBD,EAAcC,EAAY,KAC3B,CAEDP,EAAU,YAAcM,EACxBL,EAAY,YAAcI,CAC3B,OAAQV,EAAO,CACd,QAAQ,IAAI,iDAAkDA,CAAK,CACpE,CACH,CC3BO,SAASa,EAAqBC,EAAaC,EAAOC,EAAa,GAAM,CAC1E,GAAI,CAACD,GAASA,EAAM,SAAW,EAAG,CAChCD,EAAY,UAAY,GACxB,MACD,CAED,MAAMG,EAAkBF,EACrB,IACCG,GAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,YAMFF,EACI;AAAA;AAAA;AAAA;AAAA,YAKA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAY0BE,EAAK,IAAI;AAAA;AAAA,+BAEfA,EAAK,cAAc,MAAMA,EAAK,IAAI;AAAA;AAAA,yBAExCA,EAAK,QAAQ,kBAAkBA,EAAK,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,KAM9D,EACA,KAAK,EAAE,EAEVJ,EAAY,UAAYG,CAC1B,CC3CA,MAAMZ,EAAY,SAAS,cAAc,sBAAsB,EACzDC,EAAc,SAAS,cAAc,wBAAwB,EAC7Da,EAAc,SAAS,cAAc,eAAe,EAkC1D,eAAeC,GAAuB,CACpC,GAAI,CACF,MAAMC,EAAoB,aAAa,QAAQ,WAAW,EACpDC,EAAgB,KAAK,MAAMD,CAAiB,EAClD,GAAIC,GAAiBA,EAAc,OAAS,EAC1CT,EAAqBM,EAAaG,CAAa,MAC1C,CACL,MAAMtB,EAAQ,SAAS,cAAc,oBAAoB,EACzDA,EAAM,MAAM,QAAU,OACvB,CACF,OAAQA,EAAO,CACd,QAAQ,IAAI,kDAAmDA,CAAK,CACrE,CACH,CAEAI,EAAoBC,EAAWC,CAAW,EAC1Cc,EAAsB"}