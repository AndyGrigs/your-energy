{"version":3,"file":"index.js","sources":["../src/config/izi-toast.js","../src/constants/izi-toast.js","../src/config/api.js","../src/services/api/subscriptions-api.js","../src/constants/error-messages.js","../src/services/subscriptions.js","../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\n\niziToast.settings({\n  timeout: 3000,\n  transitionIn: 'flipInX',\n  transitionOut: 'flipOutX',\n\n  iconColor: '#FFF',\n  color: '#FFF',\n\n  close: true,\n  position: 'topRight',\n\n  messageColor: '#FFF',\n  messageSize: '16px',\n\n  progressBar: true,\n\n  progressBarEasing: 'linear',\n\n  maxWidth: '432px',\n  message: 'Sorry, something went wrong.',\n});\n\nexport { iziToast };\n","const isLocalhost =\n  window.location.origin.includes('localhost') ||\n  window.location.origin.includes('127.0.0.1');\n\nexport const iziToastOptions = {\n  success: {\n    iconUrl: isLocalhost ? './img/success.svg' : '/your-energy/img/success.svg',\n\n    progressBarColor: '#326101',\n    backgroundColor: '#59A10D',\n  },\n  error: {\n    iconUrl: isLocalhost ? './img/error.svg' : '/your-energy/img/error.svg',\n\n    progressBarColor: '#B51B1B',\n    backgroundColor: '#EF4040',\n  },\n};\n","export const API_URL = 'https://your-energy.b.goit.study/api';\n","import axios from 'axios';\nimport { API_URL } from '../../config/api';\n\naxios.defaults.baseURL = API_URL;\n\nexport const createSubscription = async email => {\n  const { data } = await axios.post('/subscription', { email });\n\n  return data;\n};\n","export const getExercisesByFiltersErrs = {\n  404: 'Exercises not found for the given filters.',\n  409: 'Filters are required to perform the search.',\n  500: 'Something went wrong while fetching exercises. Please try again later.',\n};\n\nexport const updateExerciseRatingErrs = {\n  400: 'Invalid request. Please check the body.',\n  404: 'Exercise not found. Please ensure the exercise ID is correct.',\n  409: 'Rating update conflict. The rating already exists with this email.',\n  500: 'Something went wrong while updating the rating. Please try again later.',\n};\n\nexport const getExerciseByIdErrs = {\n  400: 'Invalid request. Please check the exercise ID format.',\n  404: 'Exercise not found with the provided ID.',\n  500: 'Something went wrong while fetching the exercise. Please try again later.',\n};\n\nexport const getFiltersErrs = {\n  404: 'Filters not found. Please check the filters configuration.',\n  500: 'Something went wrong while fetching filters. Please try again later.',\n};\n\nexport const getQuoteOfTheDayErrs = {\n  404: 'Quote not found.',\n  500: 'Something went wrong while fetching the quote. Please try again later.',\n};\n\nexport const createSubscriptionErrs = {\n  400: 'Invalid request. Please check the email format.',\n  404: 'Endpoint not found. Please try again later.',\n  409: 'You are already subscribed.',\n  500: 'Something went wrong on the server. Please try again later.',\n};\n","import { iziToast } from '../config/izi-toast.js';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { iziToastOptions } from '../constants/izi-toast.js';\n\nimport * as api from './api/subscriptions-api';\nimport * as errorMessages from '../constants/error-messages';\n\nexport const handleSubscription = async email => {\n  try {\n    const { message } = await api.createSubscription(email);\n    iziToast.show({\n      ...iziToastOptions.success,\n      message,\n      timeout: 5000,\n    });\n\n    return message;\n  } catch (error) {\n    const { status } = error;\n    const message =\n      errorMessages.createSubscriptionErrs[status] ||\n      `Unexpected error (${error.message || 'unknown'})`;\n\n    iziToast.show({\n      ...iziToastOptions.error,\n      message,\n    });\n\n    throw {\n      code: status,\n      message: message,\n    };\n  }\n};\n","import { handleSubscription } from './services/subscriptions.js';\n\nconst subscribeForm = document.querySelector('#subscribe-form');\nif (subscribeForm) {\n  subscribeForm.addEventListener('submit', async event => {\n    event.preventDefault();\n    try {\n      const email = subscribeForm.email.value;\n      await handleSubscription(email);\n      subscribeForm.reset();\n    } catch (error) {\n      console.log(error);\n    }\n  });\n}"],"names":["iziToast","isLocalhost","iziToastOptions","API_URL","axios","createSubscription","email","data","createSubscriptionErrs","handleSubscription","message","api.createSubscription","error","status","errorMessages.createSubscriptionErrs","subscribeForm","event"],"mappings":"6vBAEAA,EAAS,SAAS,CAChB,QAAS,IACT,aAAc,UACd,cAAe,WAEf,UAAW,OACX,MAAO,OAEP,MAAO,GACP,SAAU,WAEV,aAAc,OACd,YAAa,OAEb,YAAa,GAEb,kBAAmB,SAEnB,SAAU,QACV,QAAS,8BACX,CAAC,ECtBD,MAAMC,EACJ,OAAO,SAAS,OAAO,SAAS,WAAW,GAC3C,OAAO,SAAS,OAAO,SAAS,WAAW,EAEhCC,EAAkB,CAC7B,QAAS,CACP,QAASD,EAAc,oBAAsB,+BAE7C,iBAAkB,UAClB,gBAAiB,SAClB,EACD,MAAO,CACL,QAASA,EAAc,kBAAoB,6BAE3C,iBAAkB,UAClB,gBAAiB,SAClB,CACH,ECjBaE,EAAU,uCCGvBC,EAAM,SAAS,QAAUD,EAElB,MAAME,EAAqB,MAAMC,GAAS,CAC/C,KAAM,CAAE,KAAAC,CAAM,EAAG,MAAMH,EAAM,KAAK,gBAAiB,CAAE,MAAAE,CAAK,CAAE,EAE5D,OAAOC,CACT,ECoBaC,EAAyB,CACpC,IAAK,kDACL,IAAK,8CACL,IAAK,8BACL,IAAK,6DACP,EC3BaC,EAAqB,MAAMH,GAAS,CAC/C,GAAI,CACF,KAAM,CAAE,QAAAI,CAAS,EAAG,MAAMC,EAAuBL,CAAK,EACtD,OAAAN,EAAS,KAAK,CACZ,GAAGE,EAAgB,QACnB,QAAAQ,EACA,QAAS,GACf,CAAK,EAEMA,CACR,OAAQE,EAAO,CACd,KAAM,CAAE,OAAAC,CAAQ,EAAGD,EACbF,EACJI,EAAqCD,CAAM,GAC3C,qBAAqBD,EAAM,SAAW,SAAS,IAEjD,MAAAZ,EAAS,KAAK,CACZ,GAAGE,EAAgB,MACnB,QAAAQ,CACN,CAAK,EAEK,CACJ,KAAMG,EACN,QAASH,CACf,CACG,CACH,EC/BMK,EAAgB,SAAS,cAAc,iBAAiB,EAC1DA,GACFA,EAAc,iBAAiB,SAAU,MAAMC,GAAS,CACtDA,EAAM,eAAc,EACpB,GAAI,CACF,MAAMV,EAAQS,EAAc,MAAM,MAClC,MAAMN,EAAmBH,CAAK,EAC9BS,EAAc,MAAK,CACpB,OAAQH,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACL,CAAG"}